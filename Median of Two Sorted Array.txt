class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m = nums1.length;
        int n = nums2.length;
        
        return median(merge(nums1,m,nums2,n), m+n);   
    }
    
    
    public int[] merge(int[] nums1, int m, int[] nums2, int n) { 
      int i = 0,j = 0, k = 0;
      
      int[] nums = new int[m+n];  
        
      while(i<m && j<n){
          if (nums1[i] < nums2[j])
                nums[k++] = nums1[i++];
          else
                nums[k++] = nums2[j++];
      }
        
      while(i<m){
          nums[k++] = nums1[i++];
      }
        
      while(j<n){
          nums[k++] = nums2[j++];
      }    
        return nums;
    }
    
    
    public double median(int[] arr , int n){
        if(n % 2 != 0)
            return (double)arr[n/2];
        
        return (double)(arr[(n-1)/2] + arr[n/2])/2.0;
    }
}